module Data.Data where

compare_high_abs :: Integer -> Integer -> Bool
compare_high_abs x y = abs(x) > abs(y)

compare_low_abs :: Integer -> Integer -> Bool
compare_low_abs x y = abs(x) < abs(y)

compare_high :: Integer -> Integer -> Bool
compare_high x y = x > y

compare_low :: Integer -> Integer -> Bool
compare_low x y = x < y

data_in_xs = [
    [100000],
    [10, -10],
    [8, -4, 2],
    [-50, -40, -30, -20, -10],
    [200, -190, -180, 170, -160, 160, 140, 130],
    [-96, 416, 215, 192, -421, 404, 302, -148, 193, 206, 353, -389],
    [-49, -367, -218, 283, -95, 195, 309, 67,
     -78, 254, -310, 41, -144, 124, -50, -219],
    [472, 91, 100, 157, -13, -263, 347, 377, 208, 78, -392, -343, -153, 421,
      -250, -225, -484, -168, 265, 233, -203, 268, -86, 234, -187, 428, -336, 32,
      -335, 436, -409, -249, -231, -286, 336, -42, -183, 197, -65, 268, 92, -469,
      -100, -452, 124, 230],
    [100000, 50000, -50000, 0],
    [7, -3, 6, -4, 8, 0],
    [5, -5, 5, -5, 5, -5, 5],
    [8, -7, 8, -7, -8, 7, -8, 7, -8],
    [-138, 421, 58, 184, 150, -171, 493, 143, 45, -261, -426],
    [-249, -54, -345, 411, -229, 258, 64, -115, -446, 431, -7, -71, -61],
    [-485, 383, -288, 329, 371, 118, 216, 441, -87,
     -42, 216, 58, 163, 214, -137, 131, -106],
    [-97, -341, -291, -83, -113, 267, 346, -365, -452, 485, -182, 241, -486,
     159, -262, -418, -146, -265, -12, 429, 73, 167, 164, 312, -150, -282, -220,
     -203, -316, 184, 43, 59, 365, 60, 495, -296, -38, 449, 169, -272, -307,
     145, -236, 249, -24, 464, -229],
    [-2],
    [3, -2],
    [-2, -1, 2],
    [-8, -5, 4, -5],
    [-9, -1, -10, 0, -1],
    [197, -275, 416, 265, -418, 288, -467, -450, 314, 342, 142, -298, -375, 436],
    [323, 70, 453, 314, -94, 280, -116, 241, 298, 91, -299,
     -455, -459, -364, 415, -204, 127, -440],
    [36, 492, -368, 79, -270, 469, -417, 40, -470, 29, -230, 149, 247, 203,
      -36, -81, -339, -369, 384, 491, -89, 459, -459, -298, 90, 140, 180, -179,
      -23, -463, 342, -16, -359, -470, -40, -88, 380, -287, 247, -287, 206, 352,
      37, 81, 419, 349, 84, 291],
    [-4, 0, -10, 2, 11, -6],
    [3, -2, -7, -2, 7, -14, 10],
    [-1, -2, 13, -7, 12, -7, 1, 11],
    [10, 6, 5, 12, -11, -18, 5, 12, 3],
    [-18, 13, 5, -8, 2, 14, -9, 19, -2, 16],
    [-29, -283, 170, 166, 493, 275, -269, 411, 373,
     255, -390, 53, 296, 336, -62],
    [363, 350, 442, 320, 85, -390, 405, 301, -301, 489, 174,
     -57, -360, 293, -423, -47, -492, -407, -389],
    [-442, 274, -61, 455, 109, -61, -223, 139, 433, -162, 413, 449, -49, 138,
      -366, -4, 133, -237, 424, 312, -273, 266, -300, 232, -112, 140, 19, 376,
      382, 473, -176, 225, -156, -264, 163, -459, 379, 289, 184, -442, -274, 124,
      -109, -226, 381, 214, 5, -12, -471]]

data_in_cmp = [
    compare_low_abs,
    compare_low_abs,
    compare_low_abs,
    compare_low_abs,
    compare_low_abs,
    compare_low_abs,
    compare_low_abs,
    compare_low_abs,
    compare_high_abs,
    compare_high_abs,
    compare_high_abs,
    compare_high_abs,
    compare_high_abs,
    compare_high_abs,
    compare_high_abs,
    compare_high_abs,
    compare_low,
    compare_low,
    compare_low,
    compare_low,
    compare_low,
    compare_low,
    compare_low,
    compare_low,
    compare_high,
    compare_high,
    compare_high,
    compare_high,
    compare_high,
    compare_high,
    compare_high,
    compare_high]

data_out = [
    [100000],
    [10, -10],
    [2, -4, 8],
    [-10, -20, -30, -40, -50],
    [130, 140, -160, 160, 170, -180, -190, 200],
    [-96, -148, 192, 193, 206, 215, 302, 353, -389, 404, 416, -421],
    [41, -49, -50, 67, -78, -95, 124, -144,
     195, -218, -219, 254, 283, 309, -310, -367],
    [-13, 32, -42, -65, 78, -86, 91, 92, 100, -100, 124, -153, 157, -168, -183,
     -187, 197, -203, 208, -225, 230, -231, 233, 234, -249, -250, -263, 265,
     268, 268, -286, -335, -336, 336, -343, 347, 377, -392, -409, 421, 428,
     436, -452, -469, 472, -484],
    [100000, 50000, -50000, 0],
    [8, 7, 6, -4, -3, 0],
    [5, -5, 5, -5, 5, -5, 5],
    [8, 8, -8, -8, -8, -7, -7, 7, 7],
    [493, -426, 421, -261, 184, -171, 150, 143, -138, 58, 45],
    [-446, 431, 411, -345, 258, -249, -229, -115, -71, 64, -61, -54, -7],
    [-485, 441, 383, 371, 329, -288, 216, 216, 214,
     163, -137, 131, 118, -106, -87, 58, -42],
    [495, -486, 485, 464, -452, 449, 429, -418, -365, 365, 346, -341, -316, 312,
     -307, -296, -291, -282, -272, 267, -265, -262, 249, 241, -236, -229, -220,
     -203, 184, -182, 169, 167, 164, 159, -150, -146, 145, -113, -97, -83, 73,
     60, 59, 43, -38, -24, -12],

    [-2],
    [-2, 3],
    [-2, -1, 2],
    [-8, -5, -5, 4],
    [-10, -9, -1, -1, 0],
    [-467, -450, -418, -375, -298, -275, 142, 197, 265, 288, 314, 342, 416, 436],
    [-459, -455, -440, -364, -299, -204, -116, -94,
     70, 91, 127, 241, 280, 298, 314, 323, 415, 453],
    [-470, -470, -463, -459, -417, -369, -368, -359, -339, -298, -287, -287,
     -270, -230, -179, -89, -88, -81, -40, -36, -23, -16, 29, 36, 37, 40, 79,
     81, 84, 90, 140, 149, 180, 203, 206, 247, 247, 291, 342, 349, 352, 380,
     384, 419, 459, 469, 491, 492],

    [11, 2, 0, -4, -6, -10],
    [10, 7, 3, -2, -2, -7, -14],
    [13, 12, 11, 1, -1, -2, -7, -7],
    [12, 12, 10, 6, 5, 5, 3, -11, -18],
    [19, 16, 14, 13, 5, 2, -2, -8, -9, -18],
    [493, 411, 373, 336, 296, 275, 255, 170, 166, 53, -29, -62, -269, -283, -390],
    [489, 442, 405, 363, 350, 320, 301, 293, 174, 85,
     -47, -57, -301, -360, -389, -390, -407, -423, -492],
    [473, 455, 449, 433, 424, 413, 382, 381, 379, 376, 312, 289, 274, 266, 232,
     225, 214, 184, 163, 140, 139, 138, 133, 124, 109, 19, 5, -4, -12, -49, -61,
     -61, -109, -112, -156, -162, -176, -223, -226, -237, -264, -273, -274,
     -300, -366, -442, -442, -459, -471]]
